    // Antes de esto, podemos checar si existe una propiedad acerca del store o si esta propiedad es nula, si es nula
    const getData = async () => {
      try {
        const value = await AsyncStorageLib.getItem("store");
        if (value !== null) {
          setvalue(value);
        }
      } catch (error) {
        console.log(error);
      }
    };
    getData();

    // Entonces podemos pasar a la siguiente y asi sucesivamente
    if (typeAccount == "vendedor") {
      // Checamos si hay un valor en el async storage
      if (value === null) {
        // Si no hay nada, entonces mandamos a llamar al documento para ver si existe
        // Si no hay un documento, entonces podemos crear uno
        // Entonces lo que debemos de hacer navegar a la pantalla de crear tienda como un modal
        getStoreDoc(first, setstore);
      } else {
        // Podemos devolver un toast para que todo signifique correcto
      }
    }
    // -- Todo esto para evitar llamadas a la base de firestore inecesarias -- Y que solo llame una vez en dado caso que no se tenga una tienda creada

    // if (typeAccount == "vendedor") {
// Vamos a mandar a buscar si existe una tienda con el uid del usuario
// Si no hay, entonces podemos rendereizar un modal, o una pantalla con options={{modal}}
//    -- Adentro de esto podemos poner una condiciopon si nos devuelve algo
//      -- Si nos devuelve un documento, entonces podemos guardar este objeto en el "asyncStorage"
//      -- Para luego utilizar los datos en la parte de "MyStore"
//      __ Si no existe, entonces podemos navegar a la pantalla "CreateStore" que va  tener el tipo modal
//}


      {asyncStorage == null ? (
        <Button title="No hay datos" />
      ) : (
        <Text>{asyncStorage}</Text>
      )}

              console.log("2- El tipo de cuenta es vendedor");
        // Si es que si hay que checar que el storage tenga algo
        const storage = await getStorageData(first);
        console.log("3- El storage tiene algo");
        console.log(storage);
          if (storage.docs.length > 0) {
            console.log("4- El storage tiene algo");
            console.log(storage.docs[0].data());
            // Si es que si hay que checar que el storage tenga algo
          setasyncStorage(storage.docs[0].data());
        } else {
          console.log("5- El storage no tiene nada");
        }


        {typeAccount === "vendedor" && asyncStorage == null && (
          <Modal
            isOpen={showModal}
            onClose={() => setShowModal(false)}
            size={"xl"}
            closeOnOverlayClick={false}
          >
            <Modal.Content>
              <Modal.CloseButton />
              <Modal.Header fontWeight={"bold"} fontSize={20}>
                <Text fontWeight={"bold"} fontSize={20}>
                  Crea tu tienda
                </Text>
              </Modal.Header>
              <Modal.Body>
                <Text>Nombre de la tienda</Text>
                <Input name={"nameStore"} placeholder={"Nombre de la tienda"} />
                <Text>Descripción</Text>
                <Input name={"description"} placeholder={"Descripción"} />
                <Text>Categoría</Text>
                <VStack alignItems="center" space={4}>
                  {/* Hacer luego un componente picker para tenerlo y que use una Flatlist para terminarlo */}
                  <Select
                    selectedValue={service}
                    width={"100%"}
                    variant="filled"
                    accessibilityLabel="Choose Service"
                    placeholder="Choose Service"
                    mt={1}
                    onValueChange={(itemValue) => setService(itemValue)}
                  >
                    <Select.Item label="Furniture" value="furniture" />
                    <Select.Item label="Cars" value="cars" />
                    <Select.Item label="Cameras" value="cameras" />
                    <Select.Item label="Games" value="games" />
                    <Select.Item label="Clothes" value="clothes" />
                    <Select.Item label="Sports" value="sports" />
                    <Select.Item label="Movies" value="movies" />
                    <Select.Item label="Books" value="books" />
                    <Select.Item label="Others" value="others" />
                  </Select>
                </VStack>
              </Modal.Body>
              <Modal.Footer>
                <Button title={"Si"} />
              </Modal.Footer>
            </Modal.Content>
          </Modal>
        )}